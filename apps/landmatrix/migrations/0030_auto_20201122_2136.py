# Generated by Django 2.2.17 on 2020-11-22 20:36

import apps.landmatrix.models.deal
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('landmatrix', '0029_auto_20201108_1017'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='deal',
            name='cached_has_no_known_investor',
        ),
        migrations.RemoveField(
            model_name='investorventureinvolvement',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='investorventureinvolvement',
            name='draft_status',
        ),
        migrations.RemoveField(
            model_name='investorventureinvolvement',
            name='modified_at',
        ),
        migrations.RemoveField(
            model_name='investorventureinvolvement',
            name='status',
        ),
        migrations.AlterField(
            model_name='deal',
            name='current_animals',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='current_crops',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='current_intention_of_investment',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100), blank=True, choices=[('Agriculture', (('BIOFUELS', 'Biofuels'), ('FOOD_CROPS', 'Food crops'), ('FODDER', 'Fodder'), ('LIVESTOCK', 'Livestock'), ('NON_FOOD_AGRICULTURE', 'Non-food agricultural commodities'), ('AGRICULTURE_UNSPECIFIED', 'Agriculture unspecified'))), ('Forestry', (('TIMBER_PLANTATION', 'Timber plantation'), ('FOREST_LOGGING', 'Forest logging / management'), ('CARBON', 'For carbon sequestration/REDD'), ('FORESTRY_UNSPECIFIED', 'Forestry unspecified'))), ('Other', (('MINING', 'Mining'), ('OIL_GAS_EXTRACTION', 'Oil / Gas extraction'), ('TOURISM', 'Tourism'), ('INDUSTRY', 'Industry'), ('CONVERSATION', 'Conservation'), ('LAND_SPECULATION', 'Land speculation'), ('RENEWABLE_ENERGY', 'Renewable Energy'), ('OTHER', 'Other')))], null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='current_resources',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='draft_status',
            field=models.IntegerField(blank=True, choices=[(1, 'Draft'), (2, 'Review'), (3, 'Activation'), (4, 'Rejected'), (5, 'To Delete')], null=True),
        ),
        migrations.AlterField(
            model_name='deal',
            name='former_land_cover',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100), blank=True, choices=[('CROPLAND', 'Cropland'), ('FOREST_LAND', 'Forest land'), ('PASTURE', 'Pasture'), ('RANGELAND', 'Shrub land/Grassland (Rangeland)'), ('MARGINAL_LAND', 'Marginal land'), ('WETLAND', 'Wetland'), ('OTHER_LAND', 'Other land (e.g. developed land â€“ specify in comment field)')], null=True, size=None, verbose_name='Former land cover'),
        ),
        migrations.AlterField(
            model_name='deal',
            name='former_land_owner',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100), blank=True, choices=[('STATE', 'State'), ('PRIVATE_SMALLHOLDERS', 'Private (smallholders)'), ('PRIVATE_LARGE_SCALE', 'Private (large-scale farm)'), ('COMMUNITY', 'Community'), ('INDIGENOUS_PEOPLE', 'Indigenous people'), ('OTHER', 'Other')], null=True, size=None, verbose_name='Former land owner'),
        ),
        migrations.AlterField(
            model_name='deal',
            name='former_land_use',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100), blank=True, choices=[('COMMERCIAL_AGRICULTURE', 'Commercial (large-scale) agriculture'), ('SMALLHOLDER_AGRICULTURE', 'Smallholder agriculture'), ('SHIFTING_CULTIVATION', 'Shifting cultivation'), ('PASTORALISM', 'Pastoralism'), ('HUNTING_GATHERING', 'Hunting/Gathering'), ('FORESTRY', 'Forestry'), ('CONSERVATION', 'Conservation'), ('OTHER', 'Other')], null=True, size=None, verbose_name='Former land use'),
        ),
        migrations.AlterField(
            model_name='deal',
            name='fully_updated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='deal',
            name='materialized_benefits',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100, verbose_name='Materialized benefits for local communities'), blank=True, choices=[('HEALTH', 'Health'), ('EDUCATION', 'Education'), ('PRODUCTIVE_INFRASTRUCTURE', 'Productive infrastructure (e.g. irrigation, tractors, machinery...)'), ('ROADS', 'Roads'), ('CAPACITY_BUILDING', 'Capacity Building'), ('FINANCIAL_SUPPORT', 'Financial Support'), ('COMMUNITY_SHARES', 'Community shares in the investment project'), ('OTHER', 'Other')], null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='modified_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='deal',
            name='name_of_community',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=255, verbose_name='Name of community'), blank=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='name_of_indigenous_people',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=255, verbose_name='Name of indigenous people'), blank=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='nature_of_deal',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100, verbose_name='Nature of the deal'), blank=True, choices=[('OUTRIGHT_PURCHASE', 'Outright Purchase'), ('LEASE', 'Lease'), ('CONCESSION', 'Concession'), ('EXPLOITATION_PERMIT', 'Exploitation permit / license / concession (for mineral resources)'), ('PURE_CONTRACT_FARMING', 'Pure contract farming')], null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='negative_impacts',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100, verbose_name='Negative impacts for local communities'), blank=True, choices=[('ENVIRONMENTAL_DEGRADATION', 'Environmental degradation'), ('SOCIO_ECONOMIC', 'Socio-economic'), ('CULTURAL_LOSS', 'Cultural loss'), ('EVICTION', 'Eviction'), ('DISPLACEMENT', 'Displacement'), ('VIOLENCE', 'Violence'), ('OTHER', 'Other')], null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='promised_benefits',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100, verbose_name='Promised benefits for local communities'), blank=True, choices=[('HEALTH', 'Health'), ('EDUCATION', 'Education'), ('PRODUCTIVE_INFRASTRUCTURE', 'Productive infrastructure (e.g. irrigation, tractors, machinery...)'), ('ROADS', 'Roads'), ('CAPACITY_BUILDING', 'Capacity Building'), ('FINANCIAL_SUPPORT', 'Financial Support'), ('COMMUNITY_SHARES', 'Community shares in the investment project'), ('OTHER', 'Other')], null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='recognition_status',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100, verbose_name='Recognition status of community land tenure'), blank=True, choices=[('INDIGENOUS_RIGHTS_RECOGNIZED', 'Indigenous Peoples traditional or customary rights recognized by government'), ('INDIGENOUS_RIGHTS_NOT_RECOGNIZED', 'Indigenous Peoples traditional or customary rights not recognized by government'), ('COMMUNITY_RIGHTS_RECOGNIZED', 'Community traditional or customary rights recognized by government'), ('COMMUNITY_RIGHTS_NOT_RECOGNIZED', 'Community traditional or customary rights not recognized by government')], null=True, size=None),
        ),
        migrations.AlterField(
            model_name='deal',
            name='source_of_water_extraction',
            field=apps.landmatrix.models.deal.ArrayField(base_field=models.CharField(max_length=100), blank=True, choices=[('GROUNDWATER', 'Groundwater'), ('SURFACE_WATER', 'Surface water'), ('RIVER', 'River'), ('LAKE', 'Lake')], null=True, size=None, verbose_name='Source of water extraction'),
        ),
        migrations.AlterField(
            model_name='deal',
            name='status',
            field=models.IntegerField(choices=[(1, 'Draft'), (2, 'Live'), (3, 'Updated'), (4, 'Deleted')], default=1),
        ),
        migrations.AlterField(
            model_name='investor',
            name='draft_status',
            field=models.IntegerField(blank=True, choices=[(1, 'Draft'), (2, 'Review'), (3, 'Activation'), (4, 'Rejected'), (5, 'To Delete')], null=True),
        ),
        migrations.AlterField(
            model_name='investor',
            name='modified_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='investor',
            name='status',
            field=models.IntegerField(choices=[(1, 'Draft'), (2, 'Live'), (3, 'Updated'), (4, 'Deleted')], default=1),
        ),
        migrations.CreateModel(
            name='Revision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(db_index=True, help_text='The date and time this revision was created.', verbose_name='date created')),
                ('comment', models.TextField(blank=True, help_text='A text comment on this revision.', verbose_name='comment')),
                ('user', models.ForeignKey(blank=True, help_text='The user who created this revision.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='LocationVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('serialized_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('revision', models.ForeignKey(help_text='The revision that contains this version.', on_delete=django.db.models.deletion.CASCADE, to='landmatrix.Revision')),
            ],
            options={
                'ordering': ['-pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvestorVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('serialized_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('revision', models.ForeignKey(help_text='The revision that contains this version.', on_delete=django.db.models.deletion.CASCADE, to='landmatrix.Revision')),
            ],
            options={
                'ordering': ['-pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvestorVentureInvolvementVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('serialized_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('revision', models.ForeignKey(help_text='The revision that contains this version.', on_delete=django.db.models.deletion.CASCADE, to='landmatrix.Revision')),
            ],
            options={
                'ordering': ['-pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DealVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('serialized_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('revision', models.ForeignKey(help_text='The revision that contains this version.', on_delete=django.db.models.deletion.CASCADE, to='landmatrix.Revision')),
            ],
            options={
                'ordering': ['-pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataSourceVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('serialized_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('revision', models.ForeignKey(help_text='The revision that contains this version.', on_delete=django.db.models.deletion.CASCADE, to='landmatrix.Revision')),
            ],
            options={
                'ordering': ['-pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContractVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('serialized_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('revision', models.ForeignKey(help_text='The revision that contains this version.', on_delete=django.db.models.deletion.CASCADE, to='landmatrix.Revision')),
            ],
            options={
                'ordering': ['-pk'],
                'abstract': False,
            },
        ),
    ]
