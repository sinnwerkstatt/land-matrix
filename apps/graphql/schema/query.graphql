type Query {
    me: User
    user(id: Int!): User
    users(sort: String = "id"): [User]

    deal(id: Int!, version: Int): Deal!
    deals(
        "You should be able to sort by any field of the model. DESC with `-`, e.g. '-modified_at'"
        sort: String = "id",
        "A limit between 1 and 500. If you need more, please contact us"
        limit: Int = 20,

        after: Int,
        "Filters are ANDed together"
        filters: [Filter]
    ): [Deal]
    dealversions(
        filters: [Filter],
        country_id: Int,
        region_id: Int,
        at_date: Date
    ): [DealVersion]


    locations(
        limit: Int = 300,
        "Filters are ANDed together"
        filters: [Filter]
    ): [Location]

    investor(id: Int!): Investor!
    investors(
        "You should be able to sort by any field of the model. DESC with `-`, e.g. '-modified_at'"
        sort: String = "id",
        "A limit between 1 and 500. If you need more, please contact us"
        limit: Int = 20,
        "Filters are ANDed together"
        filters: [Filter]
    ): [Investor]
    involvements(
        "You should be able to sort by any field of the model. DESC with `-`, e.g. '-modified_at'"
        sort: String = "id",
        "A limit between 1 and 500. If you need more, please contact us"
        limit: Int = 20,
        "Filters are ANDed together"
        filters: [Filter]
    ): [Involvement]
    investorversions(
        filters: [Filter]
    ): [InvestorVersion]

    countries: [Country]
    regions: [Region]
    animals: [Animal]
    crops: [Crop]
    minerals: [Mineral]

    aggregations: Aggregations

    formfields(language: String ="en"): FormFieldSet

    statistics(
        country_id: Int,
        region_id: Int
    ): Statistics
}

type FormFieldSet {
    deal: FormFields
    location: FormFields
    contract: FormFields
    datasource: FormFields
    investor: FormFields
    involvement: FormFields
}

scalar FormFields
